/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Analizador.AnalizadorLexico;
import Token.Token;
import WindowsListener.IrAlMenu;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author baquiax
 */
public class ReporteErrores extends javax.swing.JFrame {

    AnalizadorLexico analizador;
    DefaultTableModel tablaModel;

    /**
     * Creates new form ReporteGeneral
     *
     * @param menu
     * @param analizador
     */
    public ReporteErrores(JFrame menu, AnalizadorLexico analizador) {
        initComponents();
        this.analizador = analizador;
        IrAlMenu irAlMenu = new IrAlMenu(menu, this);
        llenarDatosJTable();
        super.addWindowListener(irAlMenu);
        super.setLayout(null);
        super.setLocationRelativeTo(null);
        super.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtTitulo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblErrores = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Errores");

        txtTitulo.setFont(new java.awt.Font("Ubuntu", 0, 36)); // NOI18N
        txtTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtTitulo.setText("Reporte de Errores");

        jtblErrores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Lexema", "Columna", "Fila"
            }
        ));
        jScrollPane1.setViewportView(jtblErrores);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 1, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtblErrores;
    private javax.swing.JLabel txtTitulo;
    // End of variables declaration//GEN-END:variables

    private void llenarDatosJTable() {
        tablaModel = (DefaultTableModel) this.jtblErrores.getModel();
        for (Token dato : this.analizador.getTokensDeError()) {
            String[] data = new String[]{
                dato.getToken(),
                dato.getColumna() + "",
                dato.getFila() + ""
            };
            tablaModel.addRow(data);
        }

    }
}
